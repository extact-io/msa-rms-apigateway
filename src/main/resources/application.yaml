#----------------------------------
# Defined for each environment
#----------------------------------
rms:
  server.port: 7001

service.url:
  item: http://localhost:7002
  reservation: http://localhost:7003
  user: http://localhost:7004

#----------------------------------
# Helidon Configurations
#----------------------------------
server:
  port: ${rms.server.port}
  access-log:
    format: "%t %h %r %s %b %D"

web-api-item/mp-rest/url: ${service.url.item}
web-api-reservation/mp-rest/url: ${service.url.reservation}
web-api-user/mp-rest/url: ${service.url.user}

openapi.ui:
  options:
    # see: https://github.com/helidon-io/helidon/issues/5998
    # see: key is io.smallrye.openapi.ui.Option emum name
    # see: value is https://ja.quarkus.io/guides/openapi-swaggerui#swagger-ui
    displayOperationId: true
    #title: RMS OpenAPI UI
    #themeHref: theme-muted.css
    #backHref: https://github.com/extact-io
    #selfHref: https://github.com/extact-io

tracing:
  service: ApiGatewayApplication

#----------------------------------
# rmsApplications Configurations
#----------------------------------
configuredCdi:
  register:
    - class: io.extact.msa.rms.platform.core.jwt.provider.impl.Auth0RsaJwtGenerator
    - class: io.extact.msa.rms.platform.fw.external.PropagateJwtClientHeadersFactory

external:
  apiType: real

main.manifest.jar: msa-rms-apigateway\.jar$

healthCheck:
  otherChecks:
    - io.extact.msa.rms.platform.core.health.ReadinessOfOutboundServersHealthCheck
  readinessOfOutboundServersHealthCheck.probe.url:
    - ${service.url.item}
    - ${service.url.reservation}
    - ${service.url.user}

health.timeout-millis: 30000 # for Helidon MicroProfile Health

openapi.info:
  title: レンタル予約システム公開API

jwt:
  privatekey.path: /jwt.key
  claim.issuer: RentalReservationSystem
mp:
  jwt:
    verify.publickey.location: /jwt.pub.key
  openapi:
    model.reader: io.extact.msa.rms.platform.fw.webapi.openapi.JwtAuthDecoratedModelReader



# Set when you want to filter the output.
# Output the entire amount even if there is no configdump setting itself.
configdump:
  # true : Output only the config that matches the prefix to filter.
  # false: Temporarily disable the filter.
  filter-enable: true
  filters:
    #- filter: security
    - filter: server
    #- filter: jakarta
    #- filter: cors
    #- filter: csv
    #- filter: persistence
    #- filter: configuredCdi
    #- filter: json
    #- filter: mp
    #- filter: jwt
    #- filter: healthCheck
